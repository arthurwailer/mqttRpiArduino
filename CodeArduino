// #
// # Autor  : Sebastian Lopez
// # Date   : 19.08.2022
// # E-Mail : sebastian.lopez.c@usach.cl

// # Description:
// # Codigo para captar datos desde sensor DHT y EC mediante arduino

// # Connection:
// #    INPUT:
// #      * DHT: PIN 2 DIGITAL
// #      * DHT: PIN 1 ANALOGO
// #    OUTPUT:
// #      * LED PIN 13 DIGITAL
// # 

// Incluimos librer√≠a
#include <DHT.h>
#include <OneWire.h>
 
// Definimos el pin digital donde se conecta el sensor DHT
#define DHTPIN 2
// Dependiendo del tipo de sensor DHT
#define DHTTYPE DHT11
// Definimos la conversion ADC Sensor EC
#define StartConvert 0
// variables para leer muestras analogicas en un intervalo de tiempo guardandolas en un buffer
const byte numReadings = 20;     //the number of sample times
byte ECsensorPin = A1;  //EC Meter analog output,pin on analog 1
unsigned int AnalogSampleInterval=25,printInterval=700;  //analog sample interval;serial print interval;
unsigned int readings[numReadings];      // the readings from the analog input
byte index = 0;                  // the index of the current reading
unsigned long AnalogValueTotal = 0;                  // the running total
unsigned int AnalogAverage = 0,averageVoltage=0;                // the average
unsigned long AnalogSampleTime,printTime;
float ECcurrent;
float ec;
 
// Inicializamos el sensor DHT11
DHT dht(DHTPIN, DHTTYPE);

 
void setup() {
  Serial.begin(9600);
  dht.begin();
  pinMode(13,OUTPUT); 
  for (byte thisReading = 0; thisReading < numReadings; thisReading++)
    readings[thisReading] = 0;
    AnalogSampleTime=millis();
  printTime=millis();
  dhtSensor();
  delay(1000);
 
}
 
void loop() {
  dhtSensor();
  ecSensor();
  readSerial();
}

void dhtSensor(){
  float t = dht.readTemperature();
  float h = dht.readHumidity();
  if (isnan(t)) {
    Serial.print(-999);
  } else {
    Serial.print(t);
  }
  Serial.print("|");
  if (isnan(h)) {
    Serial.print(-999);
  } else {
    Serial.print(h);
  }
  Serial.print("|");
  if (isnan(ec)){
    Serial.print(-999);
  }else  {
    Serial.print(ec);
  }
}

void readSerial(){
  if(Serial.available() > 0 ){
      char Dato = Serial.read();
      if(Dato == 'A')   digitalWrite(13,HIGH);
      else if(Dato == 'B') digitalWrite(13,LOW); 
  }
  Serial.print("\n");
  delay(1000);
}

void ecSensor(){
   /*
   Every once in a while,sample the analog value and calculate the average.
  */
  if(millis()-AnalogSampleTime>=AnalogSampleInterval)
  {
    AnalogSampleTime=millis();
     // subtract the last reading:
    AnalogValueTotal = AnalogValueTotal - readings[index];
    // read from the sensor:
    readings[index] = analogRead(ECsensorPin);
    // add the reading to the total:
    AnalogValueTotal = AnalogValueTotal + readings[index];
    // advance to the next position in the array:
    index = index + 1;
    // if we're at the end of the array...
    if (index >= numReadings)
    // ...wrap around to the beginning:
    index = 0;
    // calculate the average:
    AnalogAverage = AnalogValueTotal / numReadings;
  }
 
  if(millis()-printTime>=printInterval)
  {
    printTime=millis();
    ec=(int)AnalogAverage*(float)5000/1024;
  } else {
    ec = -999;
  }

  
}
